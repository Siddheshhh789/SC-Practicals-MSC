import numpy as np

np.set_printoptions(precision=2)

x = np.zeros((3,))
weights = np.zeros((3,))
desired = np.zeros((3,))
actual = np.zeros((3,))

# Input initial values
for i in range(0, 3):
    x[i] = float(input("Initial inputs:"))

# Input initial weights
for i in range(0, 3):
    weights[i] = float(input("Initial weights:"))

# Input desired outputs
for i in range(0, 3):
    desired[i] = float(input("Desired output:"))

learning_rate = float(input("Enter learning rate:"))

actual = x * weights
print("Initial actual output:", actual)
print("Desired output:", desired)

while not np.array_equal(desired, actual):
    for i in range(0, 3):
        weights[i] = weights[i] + learning_rate * (desired[i] - actual[i])
    
    actual = x * weights
    print("Updated weights:", weights)
    print("Actual output:", actual)
    print("Desired output:", desired)
    print("*" * 30)

print("Final output")
print("Corrected weights:", weights)
print("Actual output:", actual)
print("Desired output:", desired)
